import React, { useState } from 'react'; // –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç React
import { Link, NavLink, useNavigate } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { logout, selectIsAuthenticated, selectUser } from '../../store/authSlice';
import type { AppDispatch } from '../../store';
import { useTheme } from '../../hooks/useTheme'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫
import './Header.css';
import logo from '../../assets/logo.svg'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –ª–æ–≥–æ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω

const Header = () => { // –£–±—Ä–∞–ª–∏ React.FC
  const isAuthenticated = useSelector(selectIsAuthenticated);
  const user = useSelector(selectUser);
  const dispatch = useDispatch<AppDispatch>();
  const navigate = useNavigate();
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [theme, toggleTheme] = useTheme(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫

  const handleLogout = () => {
    dispatch(logout());
    navigate('/login');
    setIsMobileMenuOpen(false); // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
  };

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const closeMobileMenu = () => {
    setIsMobileMenuOpen(false);
  };

  const navLinkClassName = ({ isActive }: { isActive: boolean }) => 
    isActive ? 'nav-link active-link' : 'nav-link';

  return (
    <header className="app-header">
      <Link to="/" className="logo-link" onClick={closeMobileMenu}>
        <img src={logo} alt="CoinKeeper Logo" className="logo-image" />
        <span className="logo-text">CoinKeeper</span>
      </Link>

      {/* –ö–Ω–æ–ø–∫–∞ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é */}
      <button className="mobile-menu-toggle" onClick={toggleMobileMenu} aria-label="Toggle navigation">
        {isMobileMenuOpen ? '‚úï' : '‚ò∞'}
      </button>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
      <nav className="desktop-nav">
        {isAuthenticated ? (
          <>
            <NavLink to="/dashboard" className={navLinkClassName}>
              –û–±–∑–æ—Ä
            </NavLink>
            <NavLink to="/categories" className={navLinkClassName}>
              –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            </NavLink>
            <NavLink to="/statistics" className={navLinkClassName}>
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </NavLink>
            <div className="user-info">
              {user?.email && <span className="user-email">{user.email}</span>}
              <button onClick={handleLogout} className="nav-button logout-button">
                –í—ã–π—Ç–∏
              </button>
              <button onClick={toggleTheme} className="theme-toggle-button nav-button">
                {theme === 'light' ? 'üåô' : '‚òÄÔ∏è'}
              </button>
            </div>
          </>
        ) : (
          <>
            <NavLink to="/login" className={navLinkClassName}>
              –í–æ–π—Ç–∏
            </NavLink>
            <NavLink to="/register" className={navLinkClassName}>
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </NavLink>
          </>
        )}
      </nav>

      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
      {isMobileMenuOpen && (
        <div className="mobile-menu-overlay" onClick={closeMobileMenu}>
          <nav className="mobile-nav" onClick={(e: React.MouseEvent) => e.stopPropagation()}> {/* –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å–∞–º–æ –º–µ–Ω—é */}
            <button onClick={toggleTheme} className="theme-toggle-button mobile-theme-toggle-button">
              –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É: {theme === 'light' ? 'üåô –¢–µ–º–Ω–∞—è' : '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è'}
            </button>
            {isAuthenticated ? (
              <>
                {user?.email && <span className="user-email mobile-user-email">{user.email}</span>}
                <NavLink to="/dashboard" className={navLinkClassName} onClick={closeMobileMenu}>
                  –û–±–∑–æ—Ä
                </NavLink>
                <NavLink to="/categories" className={navLinkClassName} onClick={closeMobileMenu}>
                  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
                </NavLink>
                <NavLink to="/statistics" className={navLinkClassName} onClick={closeMobileMenu}>
                  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                </NavLink>
                <button onClick={handleLogout} className="nav-button logout-button mobile-logout-button">
                  –í—ã–π—Ç–∏
                </button>
              </>
            ) : (
              <>
                <NavLink to="/login" className={navLinkClassName} onClick={closeMobileMenu}>
                  –í–æ–π—Ç–∏
                </NavLink>
                <NavLink to="/register" className={navLinkClassName} onClick={closeMobileMenu}>
                  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </NavLink>
              </>
            )}
          </nav>
        </div>
      )}
    </header>
  );
};

export default Header;
